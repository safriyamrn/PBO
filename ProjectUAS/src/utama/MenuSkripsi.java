package utama;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author Safriya Murni
 */
public class MenuSkripsi extends javax.swing.JPanel {

    ArrayList<Skripsi> dataSkripsi;

    private void tampilSkripsi() {
        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        entityManager.getTransaction().begin();
        Query query = entityManager.createQuery("SELECT s FROM Skripsi s");
        List<Skripsi> results = query.getResultList();
        entityManager.getTransaction().commit();
        DefaultTableModel tbl = (DefaultTableModel) jTableRecordSkripsi.getModel();
        jButtonHapus.setVisible(false);
        jButtonBatal.setVisible(false);
        tbl.setRowCount(0);
        for (Skripsi s : results) {
            Object[] ob = new Object[5];
            ob[0] = s.getIdskripsi();
            ob[1] = s.getJudulskripsi();
            ob[2] = s.getPenulis();
            ob[3] = s.getTahunskripsi();
            ob[4] = s.getHalamanskripsi();
            tbl.addRow(ob);
        }
        entityManager.close();
    }

    /**
     * Creates new form MenuDashboard
     */
    public MenuSkripsi() {
        initComponents();
        tampilSkripsi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jPanelView = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRecordSkripsi = new javax.swing.JTable();
        jButtonTambah = new javax.swing.JButton();
        jButtonHapus = new javax.swing.JButton();
        jButtonBatal = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jComboBoxSearch = new javax.swing.JComboBox<>();
        jButtonSearch = new javax.swing.JButton();
        jButtonCSVSkripsi = new javax.swing.JButton();
        jPanelAdd = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelTambahSkripsi = new javax.swing.JLabel();
        jButtonSimpan = new javax.swing.JButton();
        jButtonBatalTambah = new javax.swing.JButton();
        jLabelISBN = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabelJudulBuku = new javax.swing.JLabel();
        jTextFieldJudulSkripsi = new javax.swing.JTextField();
        jLabelPengarang = new javax.swing.JLabel();
        jTextFieldPengarang = new javax.swing.JTextField();
        jLabelTahunTerbit = new javax.swing.JLabel();
        jTextFieldTahunTerbit = new javax.swing.JTextField();
        jLabelJumlahHalaman = new javax.swing.JLabel();
        jTextFieldJumlahHalaman = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1164, 686));
        setLayout(new java.awt.CardLayout());

        jPanelMain.setLayout(new java.awt.CardLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("UTAMA > Skripsi");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/dashboard_1.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("DATA SKRIPSI ISCO");

        jTableRecordSkripsi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID ", "Judul Skripsi", "Penulis", "Tahun Skripsi", "Halaman Skripsi"
            }
        ));
        jTableRecordSkripsi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRecordSkripsiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRecordSkripsi);

        jButtonTambah.setBackground(new java.awt.Color(51, 153, 255));
        jButtonTambah.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonTambah.setForeground(new java.awt.Color(255, 255, 255));
        jButtonTambah.setText("TAMBAH");
        jButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahActionPerformed(evt);
            }
        });

        jButtonHapus.setBackground(new java.awt.Color(255, 51, 51));
        jButtonHapus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonHapus.setForeground(new java.awt.Color(255, 255, 255));
        jButtonHapus.setText("HAPUS");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });

        jButtonBatal.setBackground(new java.awt.Color(255, 153, 51));
        jButtonBatal.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonBatal.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBatal.setText("BATAL");
        jButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalActionPerformed(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextFieldSearch.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldSearch.setText("Search");
        jTextFieldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusLost(evt);
            }
        });
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        jComboBoxSearch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jComboBoxSearch.setForeground(new java.awt.Color(153, 153, 153));
        jComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Judul Skripsi", "Penulis", "Penerbit", "Tahun Terbit", "Jumlah Halaman", " " }));
        jComboBoxSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchActionPerformed(evt);
            }
        });

        jButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/search.png"))); // NOI18N
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonCSVSkripsi.setBackground(new java.awt.Color(153, 153, 153));
        jButtonCSVSkripsi.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonCSVSkripsi.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCSVSkripsi.setText("IMPOR FILE");
        jButtonCSVSkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCSVSkripsiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelViewLayout = new javax.swing.GroupLayout(jPanelView);
        jPanelView.setLayout(jPanelViewLayout);
        jPanelViewLayout.setHorizontalGroup(
            jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelViewLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelViewLayout.createSequentialGroup()
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonCSVSkripsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelViewLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelViewLayout.createSequentialGroup()
                                .addGap(761, 761, 761)
                                .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        jPanelViewLayout.setVerticalGroup(
            jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelViewLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addComponent(jLabel1))
                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))))
                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCSVSkripsi)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelMain.add(jPanelView, "card2");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("UTAMA > Skripsi");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/dashboard_1.png"))); // NOI18N

        jLabelTambahSkripsi.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabelTambahSkripsi.setForeground(new java.awt.Color(153, 153, 153));
        jLabelTambahSkripsi.setText("TAMBAH DATA SKRIPSI ISCO");

        jButtonSimpan.setBackground(new java.awt.Color(51, 153, 255));
        jButtonSimpan.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonSimpan.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSimpan.setText("SIMPAN");
        jButtonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimpanActionPerformed(evt);
            }
        });

        jButtonBatalTambah.setBackground(new java.awt.Color(255, 153, 51));
        jButtonBatalTambah.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonBatalTambah.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBatalTambah.setText("BATAL");
        jButtonBatalTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalTambahActionPerformed(evt);
            }
        });

        jLabelISBN.setBackground(new java.awt.Color(255, 255, 255));
        jLabelISBN.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelISBN.setForeground(new java.awt.Color(153, 153, 153));
        jLabelISBN.setText("ID SKRIPSI");

        jTextFieldID.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });

        jLabelJudulBuku.setBackground(new java.awt.Color(255, 255, 255));
        jLabelJudulBuku.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelJudulBuku.setForeground(new java.awt.Color(153, 153, 153));
        jLabelJudulBuku.setText("JUDUL SKRIPSI");

        jTextFieldJudulSkripsi.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextFieldJudulSkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJudulSkripsiActionPerformed(evt);
            }
        });

        jLabelPengarang.setBackground(new java.awt.Color(255, 255, 255));
        jLabelPengarang.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelPengarang.setForeground(new java.awt.Color(153, 153, 153));
        jLabelPengarang.setText("PENULIS");

        jTextFieldPengarang.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextFieldPengarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPengarangActionPerformed(evt);
            }
        });

        jLabelTahunTerbit.setBackground(new java.awt.Color(255, 255, 255));
        jLabelTahunTerbit.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelTahunTerbit.setForeground(new java.awt.Color(153, 153, 153));
        jLabelTahunTerbit.setText("TAHUN TERBIT");

        jTextFieldTahunTerbit.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextFieldTahunTerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTahunTerbitActionPerformed(evt);
            }
        });

        jLabelJumlahHalaman.setBackground(new java.awt.Color(255, 255, 255));
        jLabelJumlahHalaman.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelJumlahHalaman.setForeground(new java.awt.Color(153, 153, 153));
        jLabelJumlahHalaman.setText("JUMLAH HALAMAN");

        jTextFieldJumlahHalaman.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextFieldJumlahHalaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJumlahHalamanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddLayout = new javax.swing.GroupLayout(jPanelAdd);
        jPanelAdd.setLayout(jPanelAddLayout);
        jPanelAddLayout.setHorizontalGroup(
            jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddLayout.createSequentialGroup()
                        .addGroup(jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelAddLayout.createSequentialGroup()
                                .addComponent(jLabelTambahSkripsi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 730, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelAddLayout.createSequentialGroup()
                                .addComponent(jButtonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBatalTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(20, 20, 20))
                    .addGroup(jPanelAddLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldID, javax.swing.GroupLayout.DEFAULT_SIZE, 1224, Short.MAX_VALUE)
                            .addComponent(jTextFieldJudulSkripsi)
                            .addComponent(jTextFieldPengarang)
                            .addComponent(jTextFieldTahunTerbit)
                            .addComponent(jTextFieldJumlahHalaman)
                            .addComponent(jLabelTahunTerbit)
                            .addComponent(jLabelJumlahHalaman)
                            .addComponent(jLabelISBN)
                            .addComponent(jLabelJudulBuku)
                            .addComponent(jLabelPengarang))
                        .addContainerGap())))
        );
        jPanelAddLayout.setVerticalGroup(
            jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addComponent(jLabelTambahSkripsi))
                .addGap(18, 18, 18)
                .addGroup(jPanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBatalTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelISBN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelJudulBuku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldJudulSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelPengarang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelTahunTerbit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTahunTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelJumlahHalaman)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldJumlahHalaman, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(216, Short.MAX_VALUE))
        );

        jPanelMain.add(jPanelAdd, "card2");

        add(jPanelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahActionPerformed
        jPanelMain.removeAll();
        jPanelMain.add(jPanelAdd);
        jPanelMain.repaint();
        jPanelMain.revalidate();

        if (jButtonTambah.getText().equals("UBAH")) {
            dataTabel();
            jButtonSimpan.setText("UBAH");
        }
    }//GEN-LAST:event_jButtonTambahActionPerformed

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        deleteData();
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void jButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalActionPerformed
        jPanelMain.removeAll();
        jPanelMain.add(new MenuBuku());
        jPanelMain.repaint();
        jPanelMain.revalidate();
        
    }//GEN-LAST:event_jButtonBatalActionPerformed

    private void jButtonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimpanActionPerformed
        if (jButtonSimpan.getText().equals("TAMBAH")) {

            String idSkripsi = jTextFieldID.getText().trim();
            String judulSkripsi = jTextFieldJudulSkripsi.getText();
            String penulis = jTextFieldPengarang.getText();
            String tahunTerbit = jTextFieldTahunTerbit.getText();
            String jumlahHalaman = jTextFieldJumlahHalaman.getText();

            //Awal Persistence 
            EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
            entityManager.getTransaction().begin();
            Skripsi s = new Skripsi();
            s.setIdskripsi(idSkripsi);

            if (s != null) {
                s.setIdskripsi(idSkripsi);
                s.setJudulskripsi(judulSkripsi);
                s.setPenulis(penulis);
                s.setTahunskripsi(tahunTerbit);
                s.setHalamanskripsi(jumlahHalaman);
                entityManager.persist(s);
                entityManager.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Berhasil");
            } else {
                JOptionPane.showMessageDialog(null, "Gagal");

                new MenuSkripsi().setVisible(true);
            }

            //Akhir Persistence
            jTextFieldID.setText("");
            jTextFieldJudulSkripsi.setText("");
            jTextFieldPengarang.setText("");
            jTextFieldTahunTerbit.setText("");
            jTextFieldJumlahHalaman.setText("");
            
            tampilSkripsi();
            
        } else {
            updateData();
        }
    }//GEN-LAST:event_jButtonSimpanActionPerformed

    private void jButtonBatalTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalTambahActionPerformed
        jPanelMain.removeAll();
        jPanelMain.add(jPanelView);
        jPanelMain.repaint();
        jPanelMain.revalidate();
        
        tampilSkripsi();
    }//GEN-LAST:event_jButtonBatalTambahActionPerformed

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jTextFieldJudulSkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJudulSkripsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJudulSkripsiActionPerformed

    private void jTextFieldPengarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPengarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPengarangActionPerformed

    private void jTextFieldTahunTerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTahunTerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTahunTerbitActionPerformed

    private void jTextFieldJumlahHalamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJumlahHalamanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJumlahHalamanActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jComboBoxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchActionPerformed

    private void jTableRecordSkripsiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRecordSkripsiMouseClicked
        if (jButtonTambah.getText().equals("TAMBAH")) {
            jButtonTambah.setText("UBAH");
            jButtonHapus.setVisible(true);
            jButtonBatal.setVisible(true);
        }
        try {
            EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
            entityManager.getTransaction().begin();

            int row = jTableRecordSkripsi.getSelectedRow();
            String tabel_klik = (jTableRecordSkripsi.getModel().getValueAt(row, 0).toString());

            // Ubah kode di bawah ini untuk mencari data yang diinginkan
            Skripsi s = entityManager.find(Skripsi.class, tabel_klik);
            if (s != null) {
                String idSkripsi = s.getIdskripsi();
                String judulSkripsi = s.getJudulskripsi();
                String penulis = s.getPenulis();
                String tahunTerbit = s.getTahunskripsi();
                String jumlahHalaman = s.getHalamanskripsi();
            }

            entityManager.getTransaction().commit();
        } catch (Exception e) {
            // Handle exceptions appropriately
        }
    }//GEN-LAST:event_jTableRecordSkripsiMouseClicked

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String s = jTextFieldSearch.getText();
        switch (jComboBoxSearch.getSelectedIndex()) {
            case 0:
                getdataID(s);
                break;
            case 1:
                getdataJudul(s);
                break;
            case 2:
                getdataPengarang(s);
                break;
            case 3:
                getdataTahunTerbit(s);
                break;
            case 4:
                getdataJumlahHalaman(s);
                break;
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusGained
        String s = jTextFieldSearch.getText();
        if (s.equals("Search")) {
            jTextFieldSearch.setText("");
        }
    }//GEN-LAST:event_jTextFieldSearchFocusGained

    private void jTextFieldSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusLost
        String s = jTextFieldSearch.getText();
        if (s.equals("")) {
            jTextFieldSearch.setText("Search");
        }
    }//GEN-LAST:event_jTextFieldSearchFocusLost

    private void jButtonCSVSkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCSVSkripsiActionPerformed
        JFileChooser filechooser = new JFileChooser();

        int i = filechooser.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION) {
            EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
            entityManager.getTransaction().begin();

            File f = filechooser.getSelectedFile();
            String filepath = f.getPath();

            //Parsing Data CSV
            System.out.print(filepath);
            DefaultTableModel csv_data = new DefaultTableModel();

            // Deklarasi bukuRoot
            CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
            CriteriaQuery<Book> criteriaQuery = criteriaBuilder.createQuery(Book.class);
            Root<Book> bukuRoot = criteriaQuery.from(Book.class);

            try {
                InputStreamReader inputStreamReader = new InputStreamReader(new FileInputStream(filepath));
                org.apache.commons.csv.CSVParser csvParser = CSVFormat.DEFAULT.parse(inputStreamReader);

                for (CSVRecord csvRecord : csvParser) {
                    Book b = new Book();
                    b.setIsbn(csvRecord.get(0));
                    b.setJudul(csvRecord.get(1));
                    b.setPengarang(csvRecord.get(3));
                    b.setPenerbit(csvRecord.get(4));
                    b.setTahun(csvRecord.get(5));
                    b.setHalamanbuku(csvRecord.get(6));

                    // Tidak menggunakan join dengan kategori
                    entityManager.persist(b);
                }

                // Commit hanya jika tidak ada exception
                entityManager.getTransaction().commit();

                // Menampilkan pesan sukses
                JOptionPane.showMessageDialog(null, "File berhasil diupload.");

                // Refresh data setelah mengunggah
                tampilSkripsi();
            } catch (Exception ex) {
                // Menampilkan pesan gagal
                JOptionPane.showMessageDialog(null, "File gagal diupload. Error: " + ex.getMessage());

                // Rollback transaksi jika terjadi exception
                entityManager.getTransaction().rollback();

                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButtonCSVSkripsiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBatal;
    private javax.swing.JButton jButtonBatalTambah;
    private javax.swing.JButton jButtonCSVSkripsi;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonSimpan;
    private javax.swing.JButton jButtonTambah;
    private javax.swing.JComboBox<String> jComboBoxSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelISBN;
    private javax.swing.JLabel jLabelJudulBuku;
    private javax.swing.JLabel jLabelJumlahHalaman;
    private javax.swing.JLabel jLabelPengarang;
    private javax.swing.JLabel jLabelTahunTerbit;
    private javax.swing.JLabel jLabelTambahSkripsi;
    private javax.swing.JPanel jPanelAdd;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRecordSkripsi;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldJudulSkripsi;
    private javax.swing.JTextField jTextFieldJumlahHalaman;
    private javax.swing.JTextField jTextFieldPengarang;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JTextField jTextFieldTahunTerbit;
    // End of variables declaration//GEN-END:variables

    private void dataTabel() {
        jPanelView.setVisible(false);
        jPanelAdd.setVisible(true);

        int row = jTableRecordSkripsi.getSelectedRow();
        jLabelTambahSkripsi.setText("Perbarui Data Skripsi ISCO ");

        jTextFieldID.setEnabled(false);

        jTextFieldID.setText(jTableRecordSkripsi.getValueAt(row, 0).toString());
        jTextFieldJudulSkripsi.setText(jTableRecordSkripsi.getValueAt(row, 1).toString());
        jTextFieldPengarang.setText(jTableRecordSkripsi.getValueAt(row, 2).toString());
        jTextFieldTahunTerbit.setText(jTableRecordSkripsi.getValueAt(row, 3).toString());
        jTextFieldJumlahHalaman.setText(jTableRecordSkripsi.getValueAt(row, 4).toString());
        
        tampilSkripsi();
    }

    private void deleteData() {
        String id = jTableRecordSkripsi.getValueAt(jTableRecordSkripsi.getSelectedRow(), 0).toString();

        //Awal Persistence 
        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        entityManager.getTransaction().begin();
        Skripsi s = entityManager.find(Skripsi.class, id);
        entityManager.remove(s);
        entityManager.getTransaction().commit();
        entityManager.close();
        JOptionPane.showMessageDialog(null, "Berhasil dihapus");

        jTextFieldID.setText("");
        jTextFieldJudulSkripsi.setText("");
        jTextFieldPengarang.setText("");
        jTextFieldTahunTerbit.setText("");
        jTextFieldJumlahHalaman.setText("");
        
        tampilSkripsi();

    }

    private void updateData() {
        String idSkripsi = jTextFieldID.getText().trim();
        String judulSkripsi = jTextFieldJudulSkripsi.getText();
        String penulis = jTextFieldPengarang.getText();
        String tahunTerbit = jTextFieldTahunTerbit.getText();
        String jumlahHalaman = jTextFieldJumlahHalaman.getText();

        //Awal Persistence 
        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        entityManager.getTransaction().begin();
        Skripsi s = new Skripsi();
        s.setIdskripsi(idSkripsi);

        if (s != null) {
            s.setIdskripsi(idSkripsi);
            s.setJudulskripsi(judulSkripsi);
            s.setPenulis(penulis);
            s.setTahunskripsi(tahunTerbit);
            s.setHalamanskripsi(jumlahHalaman);
            entityManager.merge(s);

            JOptionPane.showMessageDialog(null, "Berhasil");
        } else {
            JOptionPane.showMessageDialog(null, "Gagal");

        }
        entityManager.getTransaction().commit();
        new MenuBuku().setVisible(true);

        //Akhir Persistence
        jTextFieldID.setText("");
        jTextFieldJudulSkripsi.setText("");
        jTextFieldPengarang.setText("");
        jTextFieldTahunTerbit.setText("");
        jTextFieldJumlahHalaman.setText("");

    }

    void ambildata() {
        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT s FROM Skripsi s");
        List<Skripsi> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
        tb.setRowCount(0);
        for (Skripsi s : list) {
            Object[] ob = new Object[5];
            ob[0] = s.getIdskripsi();
            ob[1] = s.getJudulskripsi();
            ob[2] = s.getPenulis();
            ob[3] = s.getTahunskripsi();
            ob[4] = s.getHalamanskripsi();
            tb.addRow(ob);
        }
    }

    private void getdataID(String idSkripsi) {
        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.idSkripsi) = :idSkripsi");
        query.setParameter("idSkripsi", "%" + idSkripsi.toLowerCase() + "%");
        List<Skripsi> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
        tb.setRowCount(0);
        for (Skripsi s : list) {
            Object[] ob = new Object[5];
            ob[0] = s.getIdskripsi();
            ob[1] = s.getJudulskripsi();
            ob[2] = s.getPenulis();
            ob[3] = s.getTahunskripsi();
            ob[4] = s.getHalamanskripsi();
            tb.addRow(ob);
        }
    }

    private void getdataJudul(String judulSkripsi) {
        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.judulSkripsi) LIKE = :judulSkripsi");
        query.setParameter("judulSkripsi", "%" + judulSkripsi.toLowerCase() + "%");
        List<Skripsi> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
        tb.setRowCount(0);
        for (Skripsi s : list) {
            Object[] ob = new Object[5];
            ob[0] = s.getIdskripsi();
            ob[1] = s.getJudulskripsi();
            ob[2] = s.getPenulis();
            ob[3] = s.getTahunskripsi();
            ob[4] = s.getHalamanskripsi();
            tb.addRow(ob);
        }
    }

//    private void getdataSubJudul(String subJudul) {
//        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.subJudul) LIKE = :subJudul");
//        query.setParameter("subJudul", "%" + subJudul.toLowerCase() + "%");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[5];
//            ob[0] = s.getIdskripsi();
//            ob[1] = s.getJudulskripsi();
//            ob[2] = s.getPenulis();
//            ob[3] = s.getTahunskripsi();
//            ob[4] = s.getHalamanskripsi();
//            tb.addRow(ob);
//        }
//    }

    private void getdataPengarang(String pengarang) {
        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.pengarang) LIKE = :pengarang");
        query.setParameter("pengarang", "%" + pengarang.toLowerCase() + "%");
        List<Skripsi> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
        tb.setRowCount(0);
        for (Skripsi s : list) {
            Object[] ob = new Object[5];
            ob[0] = s.getIdskripsi();
            ob[1] = s.getJudulskripsi();
            ob[2] = s.getPenulis();
            ob[3] = s.getTahunskripsi();
            ob[4] = s.getHalamanskripsi();
            tb.addRow(ob);
        }
    }

    private void getdataTahunTerbit(String tahunTerbit) {
        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.tahunTerbit) LIKE = :tahunTerbit");
        query.setParameter("tahunTerbit", "%" + tahunTerbit.toLowerCase() + "%");
        List<Skripsi> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
        tb.setRowCount(0);
        for (Skripsi s : list) {
            Object[] ob = new Object[5];
            ob[0] = s.getIdskripsi();
            ob[1] = s.getJudulskripsi();
            ob[2] = s.getPenulis();
            ob[3] = s.getTahunskripsi();
            ob[4] = s.getHalamanskripsi();
            tb.addRow(ob);
        }
    }

    private void getdataJumlahHalaman(String jumlahHalaman) {
        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.jumlahHalaman) LIKE = :jumlahHalaman");
        query.setParameter("jumlahHalaman", "%" + jumlahHalaman.toLowerCase() + "%");
        List<Skripsi> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
        tb.setRowCount(0);
        for (Skripsi s : list) {
            Object[] ob = new Object[5];
            ob[0] = s.getIdskripsi();
            ob[1] = s.getJudulskripsi();
            ob[2] = s.getPenulis();
            ob[3] = s.getTahunskripsi();
            ob[4] = s.getHalamanskripsi();
            tb.addRow(ob);
        }
    }

}
