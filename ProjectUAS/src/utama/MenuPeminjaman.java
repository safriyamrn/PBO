package utama;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author Safriya Murni
 */
public class MenuPeminjaman extends javax.swing.JPanel {

    ArrayList<Buku> dataBuku;

    private void tampilSkripsi() {
        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
        entityManager.getTransaction().begin();
        Query query = entityManager.createQuery("SELECT b FROM Buku b");
        List<Buku> results = query.getResultList();
        entityManager.getTransaction().commit();
        DefaultTableModel tbl = (DefaultTableModel) jTableRecordPeminjaman.getModel();
        jButtonHapus.setVisible(false);
        jButtonBatal.setVisible(false);
        tbl.setRowCount(0);
        for (Buku b : results) {
            Object[] ob = new Object[7];
            ob[0] = b.getIsbn();
            ob[1] = b.getjudul_buku();
            ob[2] = b.getsub_judul();
            ob[3] = b.getPengarang();
            ob[4] = b.getPenerbit();
            ob[5] = b.gettahun_terbit();
            ob[6] = b.getjumlah_halaman();
            tbl.addRow(ob);
        }
        entityManager.close();
    }

    /**
     * Creates new form MenuDashboard
     */
    public MenuPeminjaman() {
        initComponents();
        tampilSkripsi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserPanel1 = new datechooser.beans.DateChooserPanel();
        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        jPanelMain = new javax.swing.JPanel();
        jPanelView = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonTambah = new javax.swing.JButton();
        jButtonHapus = new javax.swing.JButton();
        jButtonBatal = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jComboBoxSearch = new javax.swing.JComboBox<>();
        jButtonSearch = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldNIMPeminjam = new javax.swing.JTextField();
        jTextFieldNamaLengkap = new javax.swing.JTextField();
        jTextFieldProgramStudi = new javax.swing.JTextField();
        jTextFieldSemester = new javax.swing.JTextField();
        jTextFieldJudulBuku = new javax.swing.JTextField();
        dateChooserPinjam = new datechooser.beans.DateChooserCombo();
        dateChooserKembali = new datechooser.beans.DateChooserCombo();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRecordPeminjaman = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1164, 686));
        setLayout(new java.awt.CardLayout());

        jPanelMain.setLayout(new java.awt.CardLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("UTAMA > Skripsi");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/dashboard_1.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("DATA PEMINJAMAN BUKU ISCO");

        jButtonTambah.setBackground(new java.awt.Color(51, 153, 255));
        jButtonTambah.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonTambah.setForeground(new java.awt.Color(255, 255, 255));
        jButtonTambah.setText("TAMBAH");
        jButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahActionPerformed(evt);
            }
        });

        jButtonHapus.setBackground(new java.awt.Color(255, 51, 51));
        jButtonHapus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonHapus.setForeground(new java.awt.Color(255, 255, 255));
        jButtonHapus.setText("HAPUS");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });

        jButtonBatal.setBackground(new java.awt.Color(255, 153, 51));
        jButtonBatal.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonBatal.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBatal.setText("BATAL");
        jButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalActionPerformed(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextFieldSearch.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldSearch.setText("Search");
        jTextFieldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusLost(evt);
            }
        });
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        jComboBoxSearch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jComboBoxSearch.setForeground(new java.awt.Color(153, 153, 153));
        jComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Judul Skripsi", "Sub Judul", "Pengarang", "Tahun Terbit", " " }));
        jComboBoxSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchActionPerformed(evt);
            }
        });

        jButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/search.png"))); // NOI18N
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("NIM Peminjam");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Nama Lengkap ");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setText("Program Studi");

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("Semester");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("Judul Buku");

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setText("Tanggal Pinjam");

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel12.setText("Tanggal Kembali");

        jTextFieldNIMPeminjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNIMPeminjamActionPerformed(evt);
            }
        });

        jTextFieldNamaLengkap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNamaLengkapActionPerformed(evt);
            }
        });

        jTextFieldProgramStudi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProgramStudiActionPerformed(evt);
            }
        });

        jTextFieldSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSemesterActionPerformed(evt);
            }
        });

        jTextFieldJudulBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJudulBukuActionPerformed(evt);
            }
        });

        jTableRecordPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRecordPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRecordPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRecordPeminjaman);

        javax.swing.GroupLayout jPanelViewLayout = new javax.swing.GroupLayout(jPanelView);
        jPanelView.setLayout(jPanelViewLayout);
        jPanelViewLayout.setHorizontalGroup(
            jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelViewLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelViewLayout.createSequentialGroup()
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelViewLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(57, 57, 57)
                                        .addComponent(jTextFieldNIMPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanelViewLayout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(51, 51, 51)
                                            .addComponent(jTextFieldNamaLengkap))
                                        .addGroup(jPanelViewLayout.createSequentialGroup()
                                            .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelViewLayout.createSequentialGroup()
                                                    .addComponent(jLabel10)
                                                    .addGap(73, 73, 73))
                                                .addGroup(jPanelViewLayout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(dateChooserKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextFieldJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanelViewLayout.createSequentialGroup()
                                                    .addComponent(dateChooserPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jButtonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(86, 86, 86))))
                                        .addGroup(jPanelViewLayout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanelViewLayout.createSequentialGroup()
                                                    .addComponent(jLabel8)
                                                    .addGap(56, 56, 56)
                                                    .addComponent(jTextFieldProgramStudi, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanelViewLayout.createSequentialGroup()
                                                    .addComponent(jLabel9)
                                                    .addGap(83, 83, 83)
                                                    .addComponent(jTextFieldSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(30, 30, 30))
                            .addComponent(jLabel12)
                            .addGroup(jPanelViewLayout.createSequentialGroup()
                                .addGap(413, 413, 413)
                                .addComponent(jButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelViewLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelViewLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelViewLayout.createSequentialGroup()
                                        .addComponent(jButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(269, 269, 269))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(20, 20, 20))
        );
        jPanelViewLayout.setVerticalGroup(
            jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelViewLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addComponent(jLabel1))
                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(263, 263, 263)
                        .addComponent(jButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelViewLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelViewLayout.createSequentialGroup()
                                .addComponent(dateChooserPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(dateChooserKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelViewLayout.createSequentialGroup()
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextFieldNIMPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextFieldNamaLengkap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextFieldProgramStudi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jTextFieldSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jTextFieldJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelViewLayout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel11))
                                    .addGroup(jPanelViewLayout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jButtonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(29, 29, 29)
                                .addComponent(jButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(50, 50, 50))
        );

        jPanelMain.add(jPanelView, "card2");

        add(jPanelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahActionPerformed
//        jPanelMain.removeAll();
//        jPanelMain.add(jPanelAdd);
//        jPanelMain.repaint();
//        jPanelMain.revalidate();
//
//        if (jButtonTambah.getText().equals("UBAH")) {
//            dataTabel();
//            jButtonSimpan.setText("UPDATE");
//        }
    }//GEN-LAST:event_jButtonTambahActionPerformed

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
       // deleteData();
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void jButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalActionPerformed
        jPanelMain.removeAll();
        jPanelMain.add(new MenuBuku());
        jPanelMain.repaint();
        jPanelMain.revalidate();
    }//GEN-LAST:event_jButtonBatalActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jComboBoxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
//        String s = jTextFieldSearch.getText();
//        switch (jComboBoxSearch.getSelectedIndex()) {
//            case 0:
//            getdataID(s);
//            break;
//            case 1:
//            getdataJudul(s);
//            break;
//            case 2:
//            getdataSubJudul(s);
//            break;
//            case 3:
//            getdataPengarang(s);
//            break;
//            case 4:
//            getdataTahunTerbit(s);
//            break;
//            case 5:
//            getdataJumlahHalaman(s);
//            break;

       // }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusGained
        String s = jTextFieldSearch.getText();
        if (s.equals("Search")) {
            jTextFieldSearch.setText("");
        }
    }//GEN-LAST:event_jTextFieldSearchFocusGained

    private void jTextFieldSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusLost
       String s = jTextFieldSearch.getText();
        if (s.equals("")) {
            jTextFieldSearch.setText("Search");
        }
    }//GEN-LAST:event_jTextFieldSearchFocusLost

    private void jTextFieldNIMPeminjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNIMPeminjamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNIMPeminjamActionPerformed

    private void jTextFieldNamaLengkapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNamaLengkapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNamaLengkapActionPerformed

    private void jTextFieldProgramStudiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProgramStudiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProgramStudiActionPerformed

    private void jTextFieldSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSemesterActionPerformed

    private void jTextFieldJudulBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJudulBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJudulBukuActionPerformed

    private void jTableRecordPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRecordPeminjamanMouseClicked
//        try {
//            EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//            entityManager.getTransaction().begin();
//
//            int row = jTableRecordPeminjaman.getSelectedRow();
//            String tabel_klik = (jTableRecordPeminjaman.getModel().getValueAt(row, 0).toString());
//
//            // Ubah kode di bawah ini untuk mencari data yang diinginkan
//            Skripsi s = entityManager.find(Skripsi.class, tabel_klik);
//            if (s != null) {
//                String idSkripsi = s.getIdSkripsi();
//                String judulSkripsi = s.getJudulSkripsi();
//                String subJudul = s.getSubJudul();
//                String pengarang = s.getPengarang();
//                String tahunTerbit = s.getTahunTerbit();
//                String jumlahHalaman = s.getJumlahHalaman();
//            }
//
//            entityManager.getTransaction().commit();
//        } catch (Exception e) {
//            // Handle exceptions appropriately
//        }
    }//GEN-LAST:event_jTableRecordPeminjamanMouseClicked

//    private void setIDSkripsi() {
//        String urutan = null;
//        //SimpleDateFormat noFormat = new SimpleDataFormat("yyMM");
//       // String no = noFormat.format(now);
//        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        entityManager.getTransaction().begin();
//        Query query = entityManager.createQuery("SELECT s RIGHT (idSkripsi, 3) AS Nomor " + 
//                "FROM Skripsi s " +
//                "WHERE idSkripsi LIKE 'SKP" + "%' " +
//                "ORDER BY idSkripsi DESC " +
//                "LIMIT 1");
//        entityManager.getTransaction().commit();
//        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private datechooser.beans.DateChooserCombo dateChooserKembali;
    private datechooser.beans.DateChooserPanel dateChooserPanel1;
    private datechooser.beans.DateChooserCombo dateChooserPinjam;
    private javax.swing.JButton jButtonBatal;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonTambah;
    private javax.swing.JComboBox<String> jComboBoxSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRecordPeminjaman;
    private javax.swing.JTextField jTextFieldJudulBuku;
    private javax.swing.JTextField jTextFieldNIMPeminjam;
    private javax.swing.JTextField jTextFieldNamaLengkap;
    private javax.swing.JTextField jTextFieldProgramStudi;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JTextField jTextFieldSemester;
    // End of variables declaration//GEN-END:variables
}
//    private void dataTabel() {
//        jPanelView.setVisible(false);
//        jPanelView.setVisible(true);
//
//        int row = jTableRecordSkripsi.getSelectedRow();
//        jLabelTambahSkripsi.setText("Perbarui Data Skripsi ISCO ");
//
//        jTextFieldID.setEnabled(false);
//
//        jTextFieldID.setText(jTableRecordSkripsi.getValueAt(row, 0).toString());
//        jTextFieldJudulSkripsi.setText(jTableRecordSkripsi.getValueAt(row, 1).toString());
//        jTextFieldSubJudul.setText(jTableRecordSkripsi.getValueAt(row, 2).toString());
//        jTextFieldPengarang.setText(jTableRecordSkripsi.getValueAt(row, 3).toString());
//        jTextFieldTahunTerbit.setText(jTableRecordSkripsi.getValueAt(row, 4).toString());
//        jTextFieldJumlahHalaman.setText(jTableRecordSkripsi.getValueAt(row, 5).toString());
//    }
//
//    private void deleteData() {
//        String id = jTableRecordSkripsi.getValueAt(jTableRecordSkripsi.getSelectedRow(), 0).toString();
//
//        //Awal Persistence 
//        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        entityManager.getTransaction().begin();
//        Skripsi s = entityManager.find(Skripsi.class, id);
//        entityManager.remove(s);
//        entityManager.getTransaction().commit();
//        entityManager.close();
//        JOptionPane.showMessageDialog(null, "Berhasil dihapus");
//
//        jTextFieldID.setText("");
//        jTextFieldJudulSkripsi.setText("");
//        jTextFieldSubJudul.setText("");
//        jTextFieldPengarang.setText("");
//        jTextFieldTahunTerbit.setText("");
//        jTextFieldJumlahHalaman.setText("");
//
//    }
//
//    private void updateData() {
//        String idSkripsi = jTextFieldID.getText().trim();
//        String judulSkripsi = jTextFieldJudulSkripsi.getText();
//        String subJudul = jTextFieldSubJudul.getText();
//        String pengarang = jTextFieldPengarang.getText();
//        String tahunTerbit = jTextFieldTahunTerbit.getText();
//        String jumlahHalaman = jTextFieldJumlahHalaman.getText();
//
//        //Awal Persistence 
//        EntityManager entityManager = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        entityManager.getTransaction().begin();
//        Skripsi s = new Skripsi();
//        s.setIdSkripsi(idSkripsi);
//
//        if (s != null) {
//            s.setJudulSkripsi(judulSkripsi);
//            s.setSubJudul(subJudul);
//            s.setPengarang(pengarang);
//            s.setTahunTerbit(tahunTerbit);
//            s.setJumlahHalaman(jumlahHalaman);
//            entityManager.merge(s);
//
//            JOptionPane.showMessageDialog(null, "Berhasil");
//        } else {
//            JOptionPane.showMessageDialog(null, "Gagal");
//
//        }
//        entityManager.getTransaction().commit();
//        new MenuBuku().setVisible(true);
//
//        //Akhir Persistence
//        jTextFieldID.setText("");
//        jTextFieldJudulSkripsi.setText("");
//        jTextFieldSubJudul.setText("");
//        jTextFieldPengarang.setText("");
//        jTextFieldTahunTerbit.setText("");
//        jTextFieldJumlahHalaman.setText("");
//
//    }
//    
//    void ambildata() {
//        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordPeminjaman.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[6];
//            ob[0] = s.getIdSkripsi();
//            ob[1] = s.getJudulSkripsi();
//            ob[2] = s.getSubJudul();
//            ob[3] = s.getPengarang();
//            ob[4] = s.getTahunTerbit();
//            ob[5] = s.getJumlahHalaman();
//            tb.addRow(ob);
//        }
//    }
//
//    private void getdataID(String idSkripsi) {
//        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.idSkripsi) = :idSkripsi");
//        query.setParameter("idSkripsi", "%" + idSkripsi.toLowerCase() + "%");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordPeminjaman.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[6];
//            ob[0] = s.getIdSkripsi();
//            ob[1] = s.getJudulSkripsi();
//            ob[2] = s.getSubJudul();
//            ob[3] = s.getPengarang();
//            ob[4] = s.getTahunTerbit();
//            ob[5] = s.getJumlahHalaman();
//            tb.addRow(ob);
//        }
//    }
//
//    private void getdataJudul(String judulSkripsi) {
//       EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.judulSkripsi) LIKE = :judulSkripsi");
//        query.setParameter("judulSkripsi", "%" + judulSkripsi.toLowerCase() + "%");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordPeminjaman.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[6];
//            ob[0] = s.getIdSkripsi();
//            ob[1] = s.getJudulSkripsi();
//            ob[2] = s.getSubJudul();
//            ob[3] = s.getPengarang();
//            ob[4] = s.getTahunTerbit();
//            ob[5] = s.getJumlahHalaman();
//            tb.addRow(ob);
//        }
//    }
//
//    private void getdataSubJudul(String subJudul) {
//        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.subJudul) LIKE = :subJudul");
//        query.setParameter("subJudul", "%" + subJudul.toLowerCase() + "%");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordPeminjaman.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[6];
//            ob[0] = s.getIdSkripsi();
//            ob[1] = s.getJudulSkripsi();
//            ob[2] = s.getSubJudul();
//            ob[3] = s.getPengarang();
//            ob[4] = s.getTahunTerbit();
//            ob[5] = s.getJumlahHalaman();
//            tb.addRow(ob);
//        }
//    }
//
//    private void getdataPengarang(String pengarang) {
//    EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.pengarang) LIKE = :pengarang");
//        query.setParameter("pengarang", "%" + pengarang.toLowerCase() + "%");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[6];
//            ob[0] = s.getIdSkripsi();
//            ob[1] = s.getJudulSkripsi();
//            ob[2] = s.getSubJudul();
//            ob[3] = s.getPengarang();
//            ob[4] = s.getTahunTerbit();
//            ob[5] = s.getJumlahHalaman();
//            tb.addRow(ob);
//        }
//    }
//
//    private void getdataTahunTerbit(String tahunTerbit) {
//        EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.tahunTerbit) LIKE = :tahunTerbit");
//        query.setParameter("tahunTerbit", "%" + tahunTerbit.toLowerCase() + "%");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[6];
//            ob[0] = s.getIdSkripsi();
//            ob[1] = s.getJudulSkripsi();
//            ob[2] = s.getSubJudul();
//            ob[3] = s.getPengarang();
//            ob[4] = s.getTahunTerbit();
//            ob[5] = s.getJumlahHalaman();
//            tb.addRow(ob);
//        }    }
// 
//    private void getdataJumlahHalaman(String jumlahHalaman) {
//       EntityManager em = Persistence.createEntityManagerFactory("ProjectUASPU").createEntityManager();
//        em.getTransaction().begin();
//        Query query = em.createQuery("SELECT s FROM Skripsi s WHERE LOWER (s.jumlahHalaman) LIKE = :jumlahHalaman");
//        query.setParameter("jumlahHalaman", "%" + jumlahHalaman.toLowerCase() + "%");
//        List<Skripsi> list = query.getResultList();
//        em.getTransaction().commit();
//        em.close();
//        DefaultTableModel tb = (DefaultTableModel) jTableRecordSkripsi.getModel();
//        tb.setRowCount(0);
//        for (Skripsi s : list) {
//            Object[] ob = new Object[6];
//            ob[0] = s.getIdSkripsi();
//            ob[1] = s.getJudulSkripsi();
//            ob[2] = s.getSubJudul();
//            ob[3] = s.getPengarang();
//            ob[4] = s.getTahunTerbit();
//            ob[5] = s.getJumlahHalaman();
//            tb.addRow(ob);
//        }
//    }
//
//}
